Index: src/main/resources/application-test.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring:\r\n  config:\r\n    activate:\r\n      on-profile: test\r\n\r\n  datasource:\r\n    driver-class-name: org.h2.Driver\r\n    username: sa\r\n    password:\r\n    url: jdbc:h2:mem:testdb\r\n  jpa:\r\n    hibernate:\r\n      ddl-auto: update\r\n    properties:\r\n      hibernate:\r\n        show_sql: true\r\n        format_sql: true\r\n        use_sql_comments: true\r\n\r\n\r\njwt:\r\n  secret:\r\n    key: ${jwt_secret_key}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/application-test.yml b/src/main/resources/application-test.yml
--- a/src/main/resources/application-test.yml	(revision 3aa6e8378fc6ac1ced658cfb830fe92cbfffc99b)
+++ b/src/main/resources/application-test.yml	(date 1711343901607)
@@ -5,12 +5,13 @@
 
   datasource:
     driver-class-name: org.h2.Driver
+    url: jdbc:h2:tcp://localhost/~/VoiceFinder
     username: sa
     password:
-    url: jdbc:h2:mem:testdb
+
   jpa:
     hibernate:
-      ddl-auto: update
+      ddl-auto: create
     properties:
       hibernate:
         show_sql: true
Index: src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring:\r\n  profiles:\r\n    active: local\r\n\r\n---\r\nspring:\r\n  config:\r\n    activate:\r\n      on-profile: local\r\n\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    username: ${SPRING_DATASOURCE_USERNAME}\r\n    password: ${SPRING_DATASOURCE_PASSWORD}\r\n    url: ${SPRING_DATASOURCE_URL}\r\n\r\n\r\n  jpa:\r\n    hibernate:\r\n      ddl-auto: update\r\n    properties:\r\n      hibernate:\r\n        show_sql: true\r\n        format_sql: true\r\n        use_sql_comments: true\r\n\r\n\r\n\r\njwt:\r\n  secret:\r\n    key: ${jwt_secret_key}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/application.yml b/src/main/resources/application.yml
--- a/src/main/resources/application.yml	(revision 3aa6e8378fc6ac1ced658cfb830fe92cbfffc99b)
+++ b/src/main/resources/application.yml	(date 1711430294600)
@@ -17,7 +17,7 @@
 
   jpa:
     hibernate:
-      ddl-auto: update
+      ddl-auto: create
     properties:
       hibernate:
         show_sql: true
Index: src/main/java/com/ilovegogi/VoiceFinder/global/config/WebSecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ilovegogi.VoiceFinder.global.config;\r\n\r\n\r\nimport com.ilovegogi.VoiceFinder.global.jwt.JwtAuthenticationFilter;\r\nimport com.ilovegogi.VoiceFinder.global.jwt.JwtAuthorizationFilter;\r\nimport com.ilovegogi.VoiceFinder.global.jwt.JwtUtil;\r\nimport com.ilovegogi.VoiceFinder.global.security.UserDetailsServiceImpl;\r\nimport lombok.RequiredArgsConstructor;\r\nimport org.springframework.boot.autoconfigure.security.servlet.PathRequest;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.http.HttpMethod;\r\nimport org.springframework.security.authentication.AuthenticationManager;\r\nimport org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;\r\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\r\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\r\nimport org.springframework.security.config.http.SessionCreationPolicy;\r\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\r\nimport org.springframework.security.crypto.password.PasswordEncoder;\r\nimport org.springframework.security.web.SecurityFilterChain;\r\nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\r\nimport org.springframework.web.cors.CorsConfiguration;\r\nimport org.springframework.web.cors.CorsConfigurationSource;\r\nimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;\r\n\r\nimport java.util.Arrays;\r\n\r\n@Configuration\r\n@EnableWebSecurity // Spring Security 지원을 가능하게 함\r\n@RequiredArgsConstructor\r\npublic class WebSecurityConfig {\r\n\r\n    private final JwtUtil jwtUtil;\r\n    private final UserDetailsServiceImpl userDetailsService;\r\n    private final AuthenticationConfiguration authenticationConfiguration;\r\n\r\n    @Bean\r\n    public PasswordEncoder passwordEncoder() {\r\n        return new BCryptPasswordEncoder();\r\n    }\r\n\r\n    @Bean\r\n    public AuthenticationManager authenticationManager(AuthenticationConfiguration configuration) throws Exception {\r\n        return configuration.getAuthenticationManager();\r\n    }\r\n\r\n    @Bean\r\n    public JwtAuthenticationFilter jwtAuthenticationFilter() throws Exception {\r\n        JwtAuthenticationFilter filter = new JwtAuthenticationFilter(jwtUtil);\r\n        filter.setAuthenticationManager(authenticationManager(authenticationConfiguration));\r\n        return filter;\r\n    }\r\n\r\n    @Bean\r\n    public JwtAuthorizationFilter jwtAuthorizationFilter() {\r\n        return new JwtAuthorizationFilter(jwtUtil, userDetailsService);\r\n    }\r\n\r\n    // CORS 설정을 위한 CorsConfigurationSource 빈 정의\r\n    @Bean\r\n    public CorsConfigurationSource corsConfigurationSource() {\r\n        CorsConfiguration configuration = new CorsConfiguration();\r\n        configuration.setAllowedOrigins(Arrays.asList(\"http://localhost:3000\",\"http://52.79.190.78\"));\r\n        configuration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\", \"OPTIONS\")); // 허용할 HTTP 메소드\r\n        configuration.setAllowedHeaders(Arrays.asList(\"*\")); // 모든 헤더 허용\r\n        configuration.setExposedHeaders(Arrays.asList(\"Authorization, Set-Cookie\")); // CORS로 인해 프론트단에서 인식하지 못하는 Authrization 헤더를 노출\r\n        configuration.setAllowCredentials(true); // 쿠키 허용\r\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\r\n        source.registerCorsConfiguration(\"/**\", configuration); // 모든 경로에 대해 적용\r\n        return source;\r\n    }\r\n\r\n    @Bean\r\n    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\r\n        http.cors(cors -> cors.configurationSource(corsConfigurationSource())); // CORS 설정 적용\r\n\r\n        // CSRF 설정\r\n        http.csrf((csrf) -> csrf.disable());\r\n\r\n        // 기본 설정인 Session 방식은 사용하지 않고 JWT 방식을 사용하기 위한 설정\r\n        http.sessionManagement((sessionManagement) ->\r\n                sessionManagement.sessionCreationPolicy(SessionCreationPolicy.STATELESS)\r\n        );\r\n\r\n        http.authorizeHttpRequests((authorizeHttpRequests) ->\r\n                authorizeHttpRequests\r\n                        .requestMatchers(HttpMethod.OPTIONS, \"/**\").permitAll() // OPTIONS 메소드 허용\r\n                        .requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll() // resources 접근 허용 설정\r\n                        .requestMatchers(\"/\").permitAll() // 메인 페이지 요청 허가\r\n                        .requestMatchers(\"/api/users/**\").permitAll() // '/api/users/'로 시작하는 요청 모두 접근 허가\r\n                        .anyRequest().authenticated() // 그 외 모든 요청 인증처리\r\n        );\r\n\r\n        // 필터 관리\r\n        http.addFilterBefore(jwtAuthorizationFilter(), JwtAuthenticationFilter.class);\r\n        http.addFilterBefore(jwtAuthenticationFilter(), UsernamePasswordAuthenticationFilter.class);\r\n\r\n        return http.build();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/ilovegogi/VoiceFinder/global/config/WebSecurityConfig.java b/src/main/java/com/ilovegogi/VoiceFinder/global/config/WebSecurityConfig.java
--- a/src/main/java/com/ilovegogi/VoiceFinder/global/config/WebSecurityConfig.java	(revision 3aa6e8378fc6ac1ced658cfb830fe92cbfffc99b)
+++ b/src/main/java/com/ilovegogi/VoiceFinder/global/config/WebSecurityConfig.java	(date 1711427922651)
@@ -19,6 +19,7 @@
 import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.security.web.SecurityFilterChain;
 import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
+import org.springframework.security.web.util.matcher.AntPathRequestMatcher;
 import org.springframework.web.cors.CorsConfiguration;
 import org.springframework.web.cors.CorsConfigurationSource;
 import org.springframework.web.cors.UrlBasedCorsConfigurationSource;
@@ -87,6 +88,7 @@
                         .requestMatchers(HttpMethod.OPTIONS, "/**").permitAll() // OPTIONS 메소드 허용
                         .requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll() // resources 접근 허용 설정
                         .requestMatchers("/").permitAll() // 메인 페이지 요청 허가
+                        .requestMatchers(new AntPathRequestMatcher("/h2-console/**")).permitAll()
                         .requestMatchers("/api/users/**").permitAll() // '/api/users/'로 시작하는 요청 모두 접근 허가
                         .anyRequest().authenticated() // 그 외 모든 요청 인증처리
         );
Index: src/main/java/com/ilovegogi/VoiceFinder/domain/user/dto/SignupRequestDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ilovegogi.VoiceFinder.domain.user.dto;\r\n\r\nimport jakarta.validation.constraints.Email;\r\nimport jakarta.validation.constraints.NotBlank;\r\nimport jakarta.validation.constraints.NotNull;\r\nimport lombok.Builder;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\nimport java.time.LocalDate;\r\n\r\n@Getter\r\n@Setter\r\npublic class SignupRequestDto {\r\n    @Email\r\n    @NotBlank\r\n    private String email;\r\n    @NotBlank\r\n    private String password;\r\n    @NotBlank\r\n    private String username;\r\n    @NotNull\r\n    private LocalDate birthDate;\r\n    @NotBlank\r\n    private String gender;\r\n    private boolean admin = false;\r\n    private String adminToken = \"\";\r\n\r\n    @Builder\r\n    public SignupRequestDto(String email, String password, String username, LocalDate birthDate, String gender, boolean admin, String adminToken) {\r\n        this.email = email;\r\n        this.password = password;\r\n        this.username = username;\r\n        this.birthDate = birthDate;\r\n        this.gender = gender;\r\n        this.admin = admin;\r\n        this.adminToken = adminToken;\r\n    }\r\n\r\n    public static class UpdateProfileRequestDto {\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/ilovegogi/VoiceFinder/domain/user/dto/SignupRequestDto.java b/src/main/java/com/ilovegogi/VoiceFinder/domain/user/dto/SignupRequestDto.java
--- a/src/main/java/com/ilovegogi/VoiceFinder/domain/user/dto/SignupRequestDto.java	(revision 3aa6e8378fc6ac1ced658cfb830fe92cbfffc99b)
+++ b/src/main/java/com/ilovegogi/VoiceFinder/domain/user/dto/SignupRequestDto.java	(date 1711423679280)
@@ -3,14 +3,13 @@
 import jakarta.validation.constraints.Email;
 import jakarta.validation.constraints.NotBlank;
 import jakarta.validation.constraints.NotNull;
-import lombok.Builder;
-import lombok.Getter;
-import lombok.Setter;
+import lombok.*;
 
 import java.time.LocalDate;
 
 @Getter
-@Setter
+@NoArgsConstructor
+@AllArgsConstructor
 public class SignupRequestDto {
     @Email
     @NotBlank
@@ -26,7 +25,7 @@
     private boolean admin = false;
     private String adminToken = "";
 
-    @Builder
+    /*@Builder
     public SignupRequestDto(String email, String password, String username, LocalDate birthDate, String gender, boolean admin, String adminToken) {
         this.email = email;
         this.password = password;
@@ -35,7 +34,7 @@
         this.gender = gender;
         this.admin = admin;
         this.adminToken = adminToken;
-    }
+    }*/
 
     public static class UpdateProfileRequestDto {
     }
